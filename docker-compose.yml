version: '3'

services:

  broker-service:
    build:
      # given project folder's sideways adjacency to broker service folder 
      context: ./../broker-service
      dockerfile: ./../broker-service/broker-service.dockerfile
    # restart docker container
    restart: always
    # docker service listens port 80, so map port 8080 on local host to 80 on docker host
    ports:
      - "8080:80"
    deploy:
      # single container
      mode: replicated
      replicas: 1

  logger-service:
    build:
      # given project folder's sideways adjacency to broker service folder 
      context: ./../logger-service
      dockerfile: ./../logger-service/logger-service.dockerfile
    # restart docker container
    restart: always
    # only accessed by other services, not local host 
    # ports:
    #   - "8080:80"
    deploy:
      # single container
      mode: replicated
      replicas: 1

  authentication-service:
    build:
      context: ./../authentication-service
      dockerfile: ./../authentication-service/authentication-service.dockerfile
    restart: always
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      # env variable
      DSN: "user=postgres host=postgres port=5432 password=password dbname=users timezone=UTC connect_timeout=5"

  mailer-service:
    # don't need port, only called by other services
    build:
      context: ./../mail-service
      dockerfile: ./../mail-service/mail-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      FROM_NAME: "John Smith"
      FROM_ADDRESS: john.smith@example.com

  postgres:
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      # Folder on machine to folder inside container
      - ./db-data/postgres/:/var/lib/postgresql/data/

  mongo:
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27017:27017"
    # self added
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MONGO_INITDB_DATABASE: logs  
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      # post colon based on official image locations
      - ./db-data/mongo/:/data/db 

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"